#! /bin/sh

SDFDIR=../C
EXTDIR=../extension

clean=0
CFLAGS="-DSDF_DEBUG_ALL -D_XOPEN_SOURCE=600 -I$SDFDIR/include -L$SDFDIR/lib"
OPT="$CFLAGS -O3"

while getopts crdph name
do
   case $name in
      c) clean=2 ;;
      r) clean=1 ;;
      d) OPT="$CFLAGS -g -O0 -Wall -Wno-unused-function -std=c99 -pedantic";
         PYDBG="-g" ;;
      h) cat <<EOF
build script options:
  -c: Clean up files. Do not build anything.
  -r: Rebuild. Clean up files and then build.
  -d: Build with debugging flags enabled.
EOF
         exit ;;
   esac
done

cd `dirname $0`/.

if [ $clean -ge 1 ] ; then
  rm -rf sdf2ascii sdf2ascii.dSYM
  [ -r pybuild/files.txt ] && cat pybuild/files.txt | xargs rm
  rm -rf pybuild
fi
if [ $clean -le 1 ] ; then
  sh gen_commit_string.sh
  gcc $OPT -o sdf2ascii sdf2ascii.c -ldl -lsdf
  gcc $OPT -o sdffilter sdffilter.c -ldl -lm -lsdf
  # Test if python is new enough for the --user flag
  user=$(python -c 'import sys, os
newenough = sys.hexversion > 0x02060000
if newenough: sys.exit(newenough)
for p in sys.path:
  if p.startswith(os.environ["HOME"]) and p.find("site-packages") != -1:
    print "/".join(p.split("/")[:-3])
    break
sys.exit(newenough)')
  if [ $? -eq 0 ]; then
    CFLAGS="$OPT" python setup.py build $PYDBG -b pybuild install \
        --prefix="$user" --record pybuild/files.txt
  else
    CFLAGS="$OPT" python setup.py build $PYDBG -b pybuild install \
        --prefix= --user --record pybuild/files.txt
  fi
  which a2x > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    for n in sdffilter sdf2ascii; do
      if [ "$n.adoc" -nt "$n.1" ]; then
        echo Building $n manpage
        a2x --verbose --no-xmllint -d manpage -f manpage "$n.adoc"
      fi
    done
  fi
fi
