#! /bin/sh

SDFDIR=../SDF_lib
EXTDIR=../extension

clean=0
CFLAGS="-DSDF_DEBUG_ALL -D_XOPEN_SOURCE=600 -I$SDFDIR -I$EXTDIR"
OPT="$CFLAGS -O3"

while getopts crdph name
do
   case $name in
      c) clean=2 ;;
      r) clean=1 ;;
      d) OPT="$CFLAGS -g -O0 -Wall -Wno-unused-function -std=c99 -pedantic";
         PYDBG="-g" ;;
      h) cat <<EOF
build script options:
  -c: Clean up files. Do not build anything.
  -r: Rebuild. Clean up files and then build.
  -d: Build with debugging flags enabled.
EOF
         exit ;;
   esac
done

cd `dirname $0`/.

if [ $clean -ge 1 ] ; then
  rm -rf sdf2ascii sdf2ascii.dSYM
  [ -r pybuild/files.txt ] && cat pybuild/files.txt | xargs rm
  rm -rf pybuild
fi
if [ $clean -le 1 ] ; then
  gcc $OPT -o sdf2ascii sdf2ascii.c \
      $SDFDIR/sdf_control.c $SDFDIR/sdf_input.c $SDFDIR/sdf_input_cartesian.c \
      $SDFDIR/sdf_input_point.c $SDFDIR/sdf_input_station.c $SDFDIR/sdf_util.c \
      -ldl
  gcc $OPT -o sdffilter sdffilter.c \
      $SDFDIR/sdf_control.c $SDFDIR/sdf_input.c $SDFDIR/sdf_input_cartesian.c \
      $SDFDIR/sdf_input_point.c $SDFDIR/sdf_input_station.c $SDFDIR/sdf_util.c \
      $SDFDIR/sdf_extension_util.c $SDFDIR/sdf_derived.c \
      $SDFDIR/sdf_helper.c $SDFDIR/stack_allocator.c \
      -ldl -lm
  CFLAGS="$OPT" python setup.py build $PYDBG -b pybuild install \
      --prefix= --user --record pybuild/files.txt
fi
